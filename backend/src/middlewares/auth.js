const jwt = require("jsonwebtoken");
const User = require("../models/user"); // üëà c·∫ßn ƒë·ªÉ ki·ªÉm tra role th·∫≠t trong DB

// ‚úÖ Ki·ªÉm tra token
const verifyToken = async (req, res, next) => {
  try {
    const authHeader = req.headers.authorization;
    if (!authHeader || !authHeader.startsWith("Bearer ")) {
      return res.status(401).json({ message: "Ch∆∞a ƒëƒÉng nh·∫≠p ho·∫∑c thi·∫øu token" });
    }

    const token = authHeader.split(" ")[1];
    const decoded = jwt.verify(token, process.env.JWT_SECRET);

    // üîç T√¨m user trong DB (ƒë·∫£m b·∫£o t·ªìn t·∫°i & c√≥ role ch√≠nh x√°c)
    const user = await User.findById(decoded.id || decoded._id).select("id role email fullname");
    if (!user) {
      return res.status(403).json({ message: "T√†i kho·∫£n kh√¥ng t·ªìn t·∫°i ho·∫∑c token kh√¥ng h·ª£p l·ªá" });
    }

    req.user = user; // G√°n l·∫°i user th·∫≠t c√≥ role
    next();
  } catch (err) {
    console.error("‚ùå verifyToken error:", err);
    return res.status(403).json({ message: "Token kh√¥ng h·ª£p l·ªá ho·∫∑c ƒë√£ h·∫øt h·∫°n" });
  }
};

// ‚úÖ Ki·ªÉm tra quy·ªÅn admin
const isAdmin = (req, res, next) => {
  if (!req.user || req.user.role !== "admin") {
    return res.status(403).json({ message: "B·∫°n kh√¥ng c√≥ quy·ªÅn truy c·∫≠p" });
  }
  next();
};

module.exports = { verifyToken, isAdmin };
